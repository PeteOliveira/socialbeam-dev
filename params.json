{"body":"### Welcome to Open Source Social Network Development Project in Rails - SOCIALBEAM\r\n\r\n### Developer and Contributor\r\nShuddhashil Ray (@raycoding) is sole developer of SocialBeam Open Source Social Network on Rails. \r\nalso on www.raycoding.net\r\n\r\n### Support or Contact\r\nYou can reach Shuddhashil Ray @raycoding for any issue related to Socialbeam.\r\n\r\n###Getting Started on Socialbeam\r\n\r\nAs you might already know Rails is a web-application framework that includes everything needed to create\r\ndatabase-backed web applications according to the Model-View-Control pattern.So I chose RAILS for development of this project\r\nfor the ease of creating a really good scalable WEB Application like Social Network. I am myself a beginner in Rails and you can\r\ncatch me with details tutorials of SOCIALBEAM on my website www.raycoding.net \r\nYou can follow the tutorials alongside the Source Code ==> http://raycoding.net/category/ruby-on-rails/socialbeam-development-tutorial/\r\nIf you need guide starting up with RAILS you can always check \r\n* The Getting Started Guide: http://guides.rubyonrails.org/getting_started.html\r\n* Ruby on Rails Tutorial Book: http://www.railstutorial.org/\r\n\r\n\r\nThe project - SOCIALBEAM\r\n\r\nCurrently running on RVM with Ruby Enterprize Edition REE 1.8.7 and Rails 3.2.8,MySQL, Apache2 - Passenger Rails to follow the project. I would suggest you to get your system setup with the following configurations. You can find many Official Guide to get your System set up with these requirement.Also you can find setup tutorials on my website www.raycoding.net for SocialBeam.\r\nThe Project is at it's initial development stage and I am sole developer, I would love anyone to contribute to Socialbeam.\r\nWith time I will try and prepare a documentation too for the same. Socialbeam like any other Social Network like Facebook , Twitter would first aim to implement the basic features of a Social Network with User(Beamers) connected to each other with social shares and streams. \r\n\r\n\r\nA little about Development Environment of SocialBeam on Rails\r\n\r\n== Console\r\n\r\nThe console is a Ruby shell, which allows you to interact with your\r\napplication's domain model. Here you'll have all parts of the application\r\nconfigured, just like it is when the application is running. You can inspect\r\ndomain models, change values, and save to the database. Starting the script\r\nwithout arguments will launch it in the development environment.\r\n\r\nTo start the console, run 'rails console' from the Socialbeam's application\r\ndirectory.\r\n\r\n\r\nIt often happens while your console is loaded you make changes to your MVC,so to reload your controllers and models after launching the console run\r\nreload!\r\n\r\n\r\n== dbconsole - NOTE I WILL ADD THE schema.rb and seed.rb for you to get the db in your local system too with all data.\r\n\r\nYou can go to the command line of your database directly through rails\r\ndbconsole. You would be connected to the database with the credentials\r\ndefined in - Socialbeam's database.yml. Starting the script without arguments will connect you\r\nto the development database.\r\n\r\n== Directory Architechture of SocialBeam App:\r\napp\r\n  Holds all the code that's specific to this particular application.\r\n\r\napp/assets\r\n  Contains subdirectories for images, stylesheets, and JavaScript files.\r\n\r\napp/controllers\r\n  Holds controllers that should be named like weblogs_controller.rb for\r\n  automated URL mapping. All controllers should descend from\r\n  ApplicationController which itself descends from ActionController::Base.\r\n\r\napp/models\r\n  Holds models that should be named like post.rb. Models descend from\r\n  ActiveRecord::Base by default.\r\n\r\napp/views\r\n  Holds the template files for the view that should be named like\r\n  weblogs/index.html.erb for the WeblogsController#index action. All views use\r\n  eRuby syntax by default.\r\n\r\napp/views/layouts\r\n  Holds the template files for layouts to be used with views. This models the\r\n  common header/footer method of wrapping views. In your views, define a layout\r\n  using the <tt>layout :default</tt> and create a file named default.html.erb.\r\n  Inside default.html.erb, call <% yield %> to render the view using this\r\n  layout.\r\n\r\napp/helpers\r\n  Holds view helpers that should be named like weblogs_helper.rb. These are\r\n  generated for you automatically when using generators for controllers.\r\n  Helpers can be used to wrap functionality for your views into methods.\r\n\r\nconfig\r\n  Configuration files for the Rails environment, the routing map, the database,\r\n  and other dependencies.\r\n\r\ndb\r\n  Contains the database schema in schema.rb. db/migrate contains all the\r\n  sequence of Migrations for your schema.\r\n\r\ndoc\r\n  This directory is where your application documentation will be stored when\r\n  generated using <tt>rake doc:app</tt>\r\n\r\nlib\r\n  Application specific libraries. Basically, any kind of custom code that\r\n  doesn't belong under controllers, models, or helpers. This directory is in\r\n  the load path.\r\n\r\npublic\r\n  The directory available for the web server. Also contains the dispatchers and the\r\n  default HTML files. This should be set as the DOCUMENT_ROOT of your web\r\n  server.\r\n\r\nscript\r\n  Helper scripts for automation and generation.\r\n\r\ntest\r\n  Unit and functional tests along with fixtures. When using the rails generate\r\n  command, template test files will be generated for you and placed in this\r\n  directory.\r\n\r\nvendor\r\n  External libraries that the application depends on. Also includes the plugins\r\n  subdirectory. If the app has frozen rails, those gems also go here, under\r\n  vendor/rails/. This directory is in the load path.\r\n\r\nFollow the tutorial on www.raycoding.net for more details.","name":"Socialbeam-dev","google":"","tagline":"Open Source Social Network Development Rails Project","note":"Don't delete this file! It's used internally to help with page regeneration."}